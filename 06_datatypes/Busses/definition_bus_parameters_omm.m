
%% OMM_Thresholds


OMM_Thresholds_BusDef = BusParamDef("OMM_Thresholds", "Description goes here");

busElements = [ ... 
    % signal name               %dim    %datatype   % sample time   %    
    %BusSignalParamDef('p_Runup_CV_V'                             , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FF_AnodeSupplyPres_bara'    ,   4       , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'bara',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FF_ASti_StartupPres_bara'   ,   1.0     , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'bara',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ASti_StartupPres_TH_p_bara' ,   1.25    , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'bara',  'this pressure must to be reached for a certain time for the OMM to consider the pressure controller to be correctly working', {STREAM_LVL.Release, 1});...}
    BusSignalParamDef('p_SU_StVolt_Connect_TH_U_V'   ,   400     , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  'this value must be exceeded for connecting the load to the fuell cell', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SU_CVSpread_Connect_TH_U_V' ,   0.04    , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  'this measured CVSpread must be under this value for the load to be connected ', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SU_StVolt_EndRunup_TH_U_V'  ,   390     , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_OCV_MinCell_TH_U_V'         ,   0.85    , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  'Criteria for OCV is reached during startup. TH is related to the cell with the lowest measured voltage', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_CVM_Valid_TH_U_V'           ,   1.5     , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  'CVM is only valid when all voltage readings are in the plausible range, so below 1.5V', {STREAM_LVL.Release, 1});...    
    BusSignalParamDef('p_IdleCurrent_TH_I_A'         ,   45      , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  'Criteria for ending runup', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_RunupCurrent_TH_I_A'        ,   20     , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  'Criteria for ending runup', {STREAM_LVL.Release, 1});...    
    %BusSignalParamDef('p_Startup_Stack_MinCurrent_I_A'           , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'A',  '', {STREAM_LVL.Release, 1});...    
    ];

OMM_Thresholds_BusDef.AssignBusElements(busElements);

%% OMM_Timings

OMM_Timings_BusDef = BusParamDef("OMM_Timings", "Description goes here");

busElements = [ ... 
    % signal name               %dim    %datatype   % sample time   %
    % setpoints
    BusSignalParamDef('p_Powerup_Comms_TO_s'             ,   5   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_Powerup_VerifAct_TO_s'              , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_Powerup_TO_s'                   ,   150 , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    % startup preperation
    BusSignalParamDef('p_SUPrep_CheckSensors_TO_s'       ,   20  , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SUPrep_CheckActuators_TO_s'     ,   100 , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SUPrep_AllSensPermaOk_PER_s'    ,   1   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SUPrep_AllActPermOff_PER_s'     ,   1   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    % flush anode, flush cathode
    BusSignalParamDef('p_FirstFlush_EAC_StartupTime_s'   ,   5   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FirstFlush_APRES_StartupTime_s' ,   1   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ASti_PresHoldingTime_D_s'       ,   0.5 , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FirstFlush_ADP_StartupTime_s'   ,   5   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FirstFlush_ReqAnodeSupplyTO_s'  ,   2   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FirstFlush_AnodeFlush_TO_s'     ,   5   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_FirstFlush_CAT_IdleBeforePurge_D'   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FirstFlush_CAT_Purge_D_s'       ,   5   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_FirstFlush_CAT_IdleAfterPurge_D_s'  , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_FF_CAT_EnMemDiffMon_TO_s'       ,   1   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...

    % Runup
    BusSignalParamDef('p_Runup_StConnectCond_TO_s'       ,   60  , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_Runup_StConnectCond_PER_s'      ,   1   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_OCV_TO_s'                       ,   10  , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  'timeout runop ocv', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_IdleCurrent_TO_s'               ,   30  , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  'timeout for reaching idle current', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_Startup_APRES_ReachPresSP_TO_s' ,   30  , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  'timeout for reaching pressure setpoint in anode', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_EMShutdown_Delay_CSIV_CSOV_s'       , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  'shutdown delay between CSIV and CSOV', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_waitForCompressor_D_s'          ,   10  , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    's',  '', {STREAM_LVL.Release, 1});...    
    BusSignalParamDef('p_waitForDCDC_D_s'                ,   3   , 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'V',  'before connecting DCDC, it needs some time to see the voltage', {STREAM_LVL.Release, 1});...    
    ];

OMM_Timings_BusDef.AssignBusElements(busElements);

%% OMM_Shutdown

OMM_Shutdown_BusDef = BusParamDef("OMM_Shutdown", "Description goes here");

busElements = [ ... 
    % signal name                           %dim    %datatype   % sample time   %
    BusSignalParamDef('p_EM_MaxStackCurrent_TH_I_A'      ,   15  ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    %UNUSED
    %BusSignalParamDef('p_Shutdown_MaxStackCurrent_TH_I_A', 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_Shutdown_ThermalAfterrun_TO_s',     1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('b_Shutdown_ThermalAfterrun_TH_T_degC' 1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     'degC',       '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_Shutdown_AfterARPSD_D_s',           1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    
    BusSignalParamDef('p_SD_CurrentMinimum_TH_I_A'       ,   3   ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     'A',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_Off_TH_I_A'                  ,   0.1 ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     'A',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_AllOxygenReactedCV_TH_U_V'   ,   0.2 ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     'A',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_DisconnectLoad_TO_s'         ,   25  ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_DryCathode_D_s'              ,   10  ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_LetAllOxygenReact_TO_s'      ,   120 ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_AllOxygenReacted_TH_U_V'     ,   24  ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_AfterOxygenReacted_D_s'      ,   1   ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_AfterAPDSD_D_s'              ,   0.1 ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_AfterAPRESSD_D_s'            ,   0.1 ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_ASVClosing_D_s'              ,   0.1 ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_HVandISO_D_s'                ,   1   ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    %
    BusSignalParamDef('p_SD_EACOff_TO_s'                 ,   30  ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_CSEPOFF_TO_s'                ,   10  ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    %
    BusSignalParamDef('p_Drying_EAC_SettleTime_s'        ,   1   ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_Drying_EAC_Settle_TO_s'         ,   5   ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    %
    BusSignalParamDef('p_SD_Rampdown_TO_s'               ,   60  ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_SD_FastOffDiscon_D_s'           ,    5   ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    %
    BusSignalParamDef('p_SD_PressureRelieve_D_s'         ,  0.5   ,   1   ,   'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    ];

OMM_Shutdown_BusDef.AssignBusElements(busElements);

%% OMM_Parameters

OMM_Parameters_BusDef = BusParamDef("OMM_Parameters", "Description goes here");

OMM_Thresholds_BusDef.AddMetaData({STREAM_LVL.Release, 1});
OMM_Timings_BusDef.AddMetaData({STREAM_LVL.Release, 1});
OMM_Shutdown_BusDef.AddMetaData({STREAM_LVL.Release, 1});

busElements = [OMM_Thresholds_BusDef, OMM_Timings_BusDef, OMM_Shutdown_BusDef];

OMM_Parameters_BusDef.AssignBusElements(busElements);

%% clear working variables

clear busElements
