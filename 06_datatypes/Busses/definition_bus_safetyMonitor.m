flagCheckNameLength = false;

%% SensorChecks

SM_SensorChecks_BusDef = BusDef("SM_SensorChecks", "Descripton goes here");

busElements = [ ... 
    % signal name               %dim    %datatype   % sample time   %
    % setpoints
    BusSignalDef('s_Ambient_pSens_check_enum'   , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_Ambient_TSens_check_enum'   , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_ARP1_Sens_check_enum'       , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_ARP2_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_ASVi_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_APRVi_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_ASti_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_EAC_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_EACi_mDotSens_check_enum'   , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_EACi_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_EACo_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CSti_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_EACi_TSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CHUi_TSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CSti_TSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CSIV_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CSOV_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CHUBVd_Sens_check_enum'     , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CHUBVw_Sens_check_enum'     , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_auxTCP_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_TCP_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_TCV_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_TCVi_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_TCPi_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CLSti_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_TCVi_TSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CLSti_TSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CLSto_TSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_ETCP_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_ECL_pSens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_CHXV_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_StCV_USens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_IVT_Sens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_BoP_ISens_check_enum'    	, 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_IsoMon_RSens_check_enum'    , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_UI_check_enum'              , 1 , 'Enum: SENS_CHECK',   		-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SensorsCheck_AllOK_bool'    , 1 , 'boolean',   		            -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_FaultySensorsList_enum'     , 31 ,'Enum: SENSOR',   		    -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    ];

SM_SensorChecks_BusDef.AssignBusElements(busElements);



%% ComponentProtection

SM_ComponentProtection_BusDef = BusDef("SM_ComponentProtection", "Descripton goes here");

busElements = [ ... 
    % signal name               %dim    %datatype   % sample time   %
    % ANODE
    BusSignalDef('s_SM_ASVi_p_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_APRVi_p_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ASti_p_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_MemDiff_p_enum'                      , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % new
    BusSignalDef('s_SM_ASVi_T_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_APRV_dp_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ARP1_T_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ARP1_P_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ARP2_T_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ARP2_P_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % CATHODE
    BusSignalDef('s_SM_EACi_p_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_EACi_T_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_EACi_mDot_enum'                      , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CHUi_T_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CSti_T_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CSti_p_enum'                         , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_INV_T_enum'                          , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % new
    BusSignalDef('s_SM_Surge_EAC'                           , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ISens_EAC'                           , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_USens_EAC'                           , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_omegaSens_EAC'                       , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_TMotorSens_EAC'                      , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % THERMAL
    BusSignalDef('s_SM_ECL_p_enum'                          , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CLSti_T_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CLSto_T_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CLSti_p_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_FCSDiff_T_enum'                      , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % new
    BusSignalDef('s_SM_pSens_TCPi'                          , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CoolMemDiff_p_enum'                  , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % ELECTRICAL
    BusSignalDef('s_SM_AvgCell_V_enum'                      , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_AvgCell2_V_enum'                      , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_AvgCell_MinCell_V_enum'              , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_Shunt_T_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_Stack_I_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_LVBus_V_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_HVBus_V_enum'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ISOMON_R_enum'                       , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % new 
    BusSignalDef('s_SM_ISens_DiffReqAct'                    , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ISens_Imperm'                        , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_H2Sens1_long_perLEL_enum'            , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_H2Sens2_long_perLEL_enum'            , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % MISC
    BusSignalDef('s_SM_H2Sens1_short_perLEL_enum'           , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_H2Sens2_short_perLEL_enum'           , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_H2Sens1_hard_perLEL_enum'           , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_H2Sens2_hard_perLEL_enum'           , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CubeInside_T_enum'                   , 1,    'Enum: SM_STATE',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_FaultID_Current'                     , 1,    'single',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_FaultID_SDTrigger'                   , 1,    'single',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CompProt_AllOK_bool'      , 1 ,   'boolean',   		    -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_List_CompProt_Component'  , 30 ,  'Enum: SM_COMPONENT',   -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_List_CompProt_Issue'      , 30 ,  'Enum: SM_STATE',   	-1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    ];

SM_ComponentProtection_BusDef.AssignBusElements(busElements);

%% ComponentProtection

SM_ActuatorsCheck_BusDef = BusDef("SM_ActuatorsCheck", "Descripton goes here");

busElements = [ ... 
    % signal name               %dim    %datatype   % sample time   %
    % setpoints
    % Anode Sensors
    BusSignalDef('s_SM_ARP1_CHECK_enum'                 , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ARP2_CHECK_enum'                 , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_EAC_CHECK_enum'                  , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CSIV_CHECK_enum'                 , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_CSOV_CHECK_enum'                 , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_ETCP_CHECK_enum'                 , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_auxTCP_CHECK_enum'               , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_TCP_CHECK_enum'                  , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_TCV_CHECK_enum'                  , 1,    'Enum: ACT_CHECK',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_Actuators_AllOff_bool'                , 1,    'boolean',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    ];


SM_ActuatorsCheck_BusDef.AssignBusElements(busElements);

%% InternalFaults

SM_InternalFaults_BusDef = BusDef("SM_InternalFaults", "Descripton goes here");

busElements = [ ... 
    % signal name               %dim    %datatype   % sample time   %
    % setpoints
    % Anode Sensors
    BusSignalDef('s_SM_OMM_TimeoutOK_bool'                     , 1,    'boolean',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_OMM_NoSubsysFault_bool'                 , 1,    'boolean',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_SM_OMM_NoSubsysEmerg_bool'                 , 1,    'boolean',       -1,     'real', 'Sample','Fixed',  [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    ];

SM_InternalFaults_BusDef.AssignBusElements(busElements);

%% SM_Parameters

SM_BusDef = BusDef("SM", "Descripton goes here");

SM_SensorChecks_BusDef.AddMetaData({STREAM_LVL.Release, 1});
SM_ComponentProtection_BusDef.AddMetaData({STREAM_LVL.Release, 1});
SM_ActuatorsCheck_BusDef.AddMetaData({STREAM_LVL.Debug, 1});
SM_InternalFaults_BusDef.AddMetaData({STREAM_LVL.Debug, 1});	

busElements = [
    SM_SensorChecks_BusDef;
    SM_ComponentProtection_BusDef;
    SM_ActuatorsCheck_BusDef;
    SM_InternalFaults_BusDef;	
    ];

SM_BusDef.AssignBusElements(busElements);

SM_BusDef.GenerateRespectiveDatatypeStructures();

%% clear working variables

clear busElements
clear busName
