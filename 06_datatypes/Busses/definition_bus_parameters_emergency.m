flagCheckNameLength = true;

%% OMM_Emergency_Shutdown

ESD_BusDef = BusParamDef("ESD", "Description goes here");

busElements = [ ... 
    % signal name                           %dim    %datatype   % sample time   %
    %BusSignalParamDef('p_EmergencyShutdown_MaxStackCurrent_TH_I_A', 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    %UNUSED
    %BusSignalParamDef('p_Shutdown_MaxStackCurrent_TH_I_A', 1,    'single',   -1,     'real', 'Sample','Fixed',  [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_Shutdown_ThermalAfterrun_TO_s',     1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('b_Shutdown_ThermalAfterrun_TH_T_degC' 1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     'degC',       '', {STREAM_LVL.Release, 1});...
    %BusSignalParamDef('p_Shutdown_AfterARPSD_D_s',           1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_MinPressureAPRVi_TH_p_bara' ,   1.0 ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     'bara',        '', {STREAM_LVL.Release, 1});...

    BusSignalParamDef('p_ESD_CurrentMinimum_TH_I_A'      ,   3   ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     'A',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_DisconnectLoadFast_TO_s'    ,   0.5 ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_DisconnectLoadRamp_TO_s'    ,   25  ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_MinCurrentRamp_Idot_Aps'    ,   -20 ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...

    BusSignalParamDef('p_ESD_LetAllOxygenReact_TO_s'     ,   24  ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_AllOxygenReacted_TH_U_V'    ,   1   ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_AfterOxygenReacted_D_s'     ,   300 ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',        '', {STREAM_LVL.Release, 1});...

    BusSignalParamDef('p_ESD_AfterAPDSD_D_s'             ,   0.1 ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_AfterAPRESSD_D_s'           ,   0   ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_ASVClosing_D_s'             ,   0   ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    BusSignalParamDef('p_ESD_ThermalAfterrun_D_s'        ,   30  ,   1,      'single',   -1,     'real', 'Sample','Fixed',   [], [],     's',       '', {STREAM_LVL.Release, 1});...
    
    ];

ESD_BusDef.AssignBusElements(busElements);

%% OMM_Parameters

EM_Parameters_BusDef = BusParamDef("EM_Parameters", "Description goes here");

ESD_BusDef.AddMetaData({STREAM_LVL.Release, 1});

busElements = ESD_BusDef;

EM_Parameters_BusDef.AssignBusElements(busElements);

%% clear working variables

clear busElements
