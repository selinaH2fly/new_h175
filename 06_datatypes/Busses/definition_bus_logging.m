flagCheckNameLength = true;

%% Anode Log

AnodeLog_BusDef = BusDef("AnodeLog", "Descripton goes here");

busElements = [ ...
    % signal name               %dim    %datatype   % sample time   %

    BusSignalDef('s_log_ARECI_SP_Settle_omega_rpm'      , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    %
    BusSignalDef('s_log_APRES_PID_SP_bara'          , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_APRES_PID_Devi_bara'        , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APRES_FFWD_APV_percent'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APRES_FFWD_ADV_percent'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APRES_FFWD_Current_percent' , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    %
    BusSignalDef('s_log_APD_PurgePeriod_s'          , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APD_PurgeOpen_s'            , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APD_DrainPeriod_s'          , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APD_DrainOpen_s'            , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APD_Drain2Period_s'          , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APD_Drain2Open_s'            , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APD_PurgeFeasible'          , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_APD_DrainFeasible'          , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
        % Disturbance Control
    BusSignalDef('s_log_DC_Error'                   , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    BusSignalDef('s_log_DC_ErrorQuad'               , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    BusSignalDef('s_log_DC_Toggle_bool'             , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    BusSignalDef('s_log_DC_startDCLater_bool'       , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    BusSignalDef('s_log_DC_TimingOffset_t_s'        , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    % APD Stage3
    BusSignalDef('s_log_APV_Request_State_enum'     , 1,    'Enum: APD_REQUEST',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    BusSignalDef('s_log_ADV_Request_State_enum'     , 1,    'Enum: APD_REQUEST',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    BusSignalDef('s_log_ADV2_Request_State_enum'    , 1,    'Enum: APD_REQUEST',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    BusSignalDef('s_log_APD_Scheduler_enum'         , 1,    'Enum: APD_SCHEDULER',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1}); ...
    ];

AnodeLog_BusDef.AssignBusElements(busElements);

%% Cathode Log

CathodeLog_BusDef = BusDef("CathodeLog", "Descripton goes here");

busElements = [ ...
    % signal name               %dim    %datatype   % sample time   %
    BusSignalDef('s_log_EAC_PID_SP_lambda'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_EAC_PID_Devi_lambda'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_EAC_FFWD_Current_rpm'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    % TSE
    BusSignalDef('s_log_EAC_mDot_gps_TSE'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    %
    BusSignalDef('s_log_ETV_Mode1_FFWD_per'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_ETV_Mode1_FFWD_SrgPrt_per'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    %
    BusSignalDef('s_log_ETV_Mode2_PID_SP_bara'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_ETV_Mode2_PID_Devi_bara'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_ETV_Mode2_SrgPrt_SP_bara'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_ETV_Mode2_SrgPrt_Margin'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    %
    BusSignalDef('s_log_TDV_DrainPeriod_s'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    BusSignalDef('s_log_TDV_DrainOpen_s'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Debug, 1});...
    %
    BusSignalDef('s_log_AIRCL_PID_out_per'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_AIRCL_PID_Devi_degC'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_AIRCL_PID_SP_degC'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_AIRCL_Qdot_estTin_degC'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_AIRCL_Qdot_estQdot_W'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_AIRCL_Qdot_percent'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    %
    BusSignalDef('s_log_CStoBlV_FFWD_Current_per'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    ];

CathodeLog_BusDef.AssignBusElements(busElements);

%% Thermal Log

ThermalLog_BusDef = BusDef("ThermalLog", "Descripton goes here");

busElements = [ ...
    % signal name               %dim    %datatype   % sample time   %
    BusSignalDef('s_log_STCL_T_PID_SP_degC'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_PID_SPSettle_degC'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_PID_Devi_K'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_PID_Devi_unfil'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % MBC specific
    BusSignalDef('s_log_STCL_T_FFWD_enabled'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_FFWD_TCV_pos'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_FFWD_TCV_unfil'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_PID_out'         , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_preChar'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_postChar'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % MBC Thermal
    BusSignalDef('s_log_STCL_ProcesHeat_Q_W'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_CoolantFlow_VDot_l_s'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...

    BusSignalDef('s_log_STCL_dT_PID_SP_degC'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_dT_PID_Devi_K'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_dT_TCP_FFWD_Curr_rpm'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    % new
    BusSignalDef('s_log_STCL_dT_Get_K'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_dT_Get_unfil'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_dT_PID_out'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_dT_total_out'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_dT_PID_criteria'     , 1,    'boolean',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_dT_eT_criteria'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_OverSteer_DynUp'     , 1,    'boolean',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_OverSteer_DynDown'     , 1,    'boolean',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_STCL_T_CLSto_SP_degC'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    ];

ThermalLog_BusDef.AssignBusElements(busElements);

%% Electrical Log

ElectricalLog_BusDef = BusDef("ElectricalLog", "Descripton goes here");

busElements = [ ...
    % signal name               %dim    %datatype   % sample time   %
    BusSignalDef('s_log_CurReq_toLoad'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_CurReq_toSubsys'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_CurReq_Derated'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_CurReq_Delayed'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_CurReq_Allowed'     , 1,    'single',   -1,             'real', 'Sample','Fixed',    [],  [],    'A',  '', {STREAM_LVL.Release, 1});...
    ];

ElectricalLog_BusDef.AssignBusElements(busElements);

%% OMM_State Log

OMM_StateLog_BusDef = BusDef("OMM_StateLog", "Descripton goes here");

busElements = [ ...
                    % signal name                       %dim    %datatype                                       % sample time   %
    BusSignalDef('s_OMM_State'                          , 1,    'Enum: OMM_StateType',                          -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Startup_State'                  , 1,    'Enum: OMM_Startup_StateType',                  -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Safe_State'                     , 1,    'Enum: OMM_Safe_StateType',                     -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Off_State'                      , 1,    'Enum: OMM_Off_StateType',                      -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Standby_State'                  , 1,    'Enum: OMM_Standby_StateType',                  -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Fault_HAPressMitigation_State'  , 1,    'Enum: OMM_Fault_HAPressMitigation_StateType',  -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Fault_Shutdown_State'           , 1,    'Enum: OMM_Fault_Shutdown_StateType',           -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Fault_FastShutdown_State'       , 1,    'Enum: OMM_Fault_FastShutdown_StateType',       -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_OMM_Fault_NormalShutdown_State'     , 1,    'Enum: OMM_Fault_NormalShutdown_StateType',     -1,            'real', 'Sample','Fixed',    [],  [],    '',  '', {STREAM_LVL.Release, 1});...
    ];

OMM_StateLog_BusDef.AssignBusElements(busElements);

%% MISC

%%Legacy

MiscLog_BusDef = BusDef("MiscLog", "Descripton goes here");

busElements = [ ...
    % signal name               %dim    %datatype   % sample time   %    
    BusSignalDef('s_log_MISC_MemDiff_p_bar'      , 1,  'single',    -1,     'real', 'Sample','Fixed',   [], [],     '', '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_MISC_CellSpread_U_V'     , 1,  'single',    -1,     'real', 'Sample','Fixed',   [], [],     '', '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_MISC_Lambda'             , 1,  'single',    -1,     'real', 'Sample','Fixed',   [], [],     '', '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_MISC_StateActual'             , 1,  'Enum: OMM_STATE',    -1,     'real', 'Sample','Fixed',   [], [],     '', '', {STREAM_LVL.Release, 1});...
    BusSignalDef('s_log_MISC_EmergencyShutdownMode'   , 1,  'Enum: EmergencyShutdownModeType',    -1,     'real', 'Sample','Fixed',   [], [],     '', '', {STREAM_LVL.Release, 1});...
    ];

MiscLog_BusDef.AssignBusElements(busElements);

%% RESERVED for X90

ReservedLog_BusDef = BusDef("ReservedLog", "Descripton goes here");

busElements = [ ...
    % signal name                   %dim    %datatype   % sample time   %    
    %% service mode signals
    BusSignalDef('s_Signal1_float'              , 1,    'single',  -1,     'real', 'Sample','Fixed',  [],  [],    '',          '', {STREAM_LVL.All, 1});...
    BusSignalDef('s_Signal2_float'              , 1,    'single',  -1,     'real', 'Sample','Fixed',  [],  [],    '',          '', {STREAM_LVL.All, 1});...
    BusSignalDef('s_Signal3_float'              , 1,    'single',  -1,     'real', 'Sample','Fixed',  [],  [],    '',          '', {STREAM_LVL.All, 1});...
    %
    ];

ReservedLog_BusDef.AssignBusElements(busElements);

%% Final Synthesis
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Logging_BusDef = BusDef("Logging", "Descripton goes here");

AnodeLog_BusDef.AddMetaData({STREAM_LVL.Release, 1});
CathodeLog_BusDef.AddMetaData({STREAM_LVL.Release, 1});
ThermalLog_BusDef.AddMetaData({STREAM_LVL.Release, 1});
ElectricalLog_BusDef.AddMetaData({STREAM_LVL.Release, 1});
MiscLog_BusDef.AddMetaData({STREAM_LVL.Release, 1});
ReservedLog_BusDef.AddMetaData({STREAM_LVL.Release, 1});
OMM_StateLog_BusDef.AddMetaData({STREAM_LVL.Release, 1});

busElements = [ ...
    AnodeLog_BusDef;
    CathodeLog_BusDef;
    ThermalLog_BusDef;
    ElectricalLog_BusDef;
    MiscLog_BusDef;
    ReservedLog_BusDef;
    OMM_StateLog_BusDef;
    ];

Logging_BusDef.AssignBusElements(busElements);

Logging_BusDef.GenerateRespectiveDatatypeStructures();


%% clear working variables

clear busElements
clear busName
